name: VectorDB Sync

on:
  pull_request:
    types: [closed]
  push:
    branches: [ main ]

jobs:
  sync:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Do not auto-recursively checkout submodules. One submodule ('trade') is misconfigured
          # and breaks recursive checkout. We will init only the changed submodules later.
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Try repo-specific requirements
          pip install -r codechat/requirements.txt || true
          # Core sync deps (serverless Pinecone SDK)
          pip install --upgrade tiktoken tree_sitter tqdm pyyaml pandas pinecone openai

      - name: Init changed submodules (shallow)
        shell: bash
        run: |
          set -euo pipefail
          # Compute BASE and HEAD for this event (same logic as the sync step)
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="${{ github.event.before }}"; HEAD="${{ github.sha }}"
          else
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.merge_commit_sha }}"
            if [ -z "$HEAD" ]; then HEAD="${{ github.sha }}"; fi
          fi
          if [ -z "$BASE" ] || [ "$BASE" = "0000000000000000000000000000000000000000" ]; then
            BASE="${HEAD}^"
          fi
          echo "[info] Diff for submodule init: $BASE..$HEAD"
          # Parse changed submodules and their SHAs from the commit range
          mapfile -t lines < <(git diff --submodule=short "$BASE" "$HEAD" | grep '^Submodule ' || true)
          if [ ${#lines[@]} -eq 0 ]; then
            echo "[info] No submodule pointer changes detected."
            exit 0
          fi
          echo "[info] Found ${#lines[@]} changed submodule pointers"
          for line in "${lines[@]}"; do
            sm=$(echo "$line" | awk '{print $2}')
            range=$(echo "$line" | awk '{print $3}')
            oldsha=$(echo "$range" | sed -E 's/^([0-9a-f]+)\.\.([0-9a-f]+).*$/\1/')
            newsha=$(echo "$range" | sed -E 's/^([0-9a-f]+)\.\.([0-9a-f]+).*$/\2/')
            # Validate .gitmodules mapping; skip misconfigured entries
            url=$(git config -f .gitmodules --get "submodule.$sm.url" || true)
            if [ -z "$url" ]; then
              echo "[warn] Skipping submodule '$sm': no URL in .gitmodules"
              continue
            fi
            echo "[info] Init submodule '$sm' ($oldsha..$newsha)"
            git submodule update --init --depth 1 -- "$sm" || { echo "[warn] init failed for '$sm'"; continue; }
            # Ensure both SHAs exist locally to allow inner diffs even with shallow clones
            if [[ "$oldsha" =~ ^0+$ ]]; then oldsha=""; fi
            if [ -n "$oldsha" ]; then
              git -C "$sm" fetch --no-tags --depth=1 origin "$oldsha" || true
            fi
            if [ -n "$newsha" ]; then
              git -C "$sm" fetch --no-tags --depth=1 origin "$newsha" || true
            fi
          done

      - name: Run VectorDB Sync (commit-range)
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        shell: bash
        run: |
          set -euo pipefail
          # Skip if sync script not present (e.g., codechat PR not merged yet)
          if [ ! -f codechat/vectordb_sync.py ]; then
            echo "[skip] codechat/vectordb_sync.py not found; skipping VectorDB sync."
            exit 0
          fi

          # Skip if required secrets not provided
          if [ -z "${PINECONE_API_KEY:-}" ] || [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "[skip] Missing PINECONE_API_KEY or OPENAI_API_KEY; skipping VectorDB sync."
            exit 0
          fi
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="${{ github.event.before }}"; HEAD="${{ github.sha }}"
          else
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.merge_commit_sha }}"
            if [ -z "$HEAD" ]; then HEAD="${{ github.sha }}"; fi
          fi
          if [ "$BASE" = "0000000000000000000000000000000000000000" ] || [ -z "$BASE" ]; then
            BASE="${HEAD}^"
          fi
          echo "[info] Sync range: $BASE..$HEAD"
          python codechat/vectordb_sync.py --from-commit "$BASE" --to-commit "$HEAD" --repo-root .

      - name: Error summary
        if: always()
        shell: bash
        run: |
          if [ -f codechat/.vector_sync_errors.jsonl ]; then
            {
              echo "## Vector Sync Errors";
              echo;
              echo '```jsonl';
              tail -n 200 codechat/.vector_sync_errors.jsonl;
              echo '```';
            } >> "$GITHUB_STEP_SUMMARY"
          else
            echo "No errors file present."
          fi

      - name: Upload VectorDB Sync errors
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vector-sync-errors
          path: codechat/.vector_sync_errors.jsonl
          if-no-files-found: ignore
          retention-days: 7
